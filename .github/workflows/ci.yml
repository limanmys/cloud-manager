name: Cloud Manager Server Yaml
on:
  push:
    branches-ignore:
      - 'releases/*'
  workflow_dispatch:
  repository_dispatch:
    types: [sync]

jobs:
  naming: 
    runs-on: ubuntu-24.04
    steps:
    - id: naming
      run: |
        [ "$GITHUB_REF" == "refs/heads/master" ] && export PRERELEASE=false || export PRERELEASE=true
        [ "$GITHUB_REF" == "refs/heads/master" ] && export NAME="Release ${{ github.run_number }}" || export NAME="${GITHUB_REF#refs/heads/} release ${{ github.run_number }}"
        [ "$GITHUB_REF" == "refs/heads/master" ] && export TAG_NAME="release.${{ github.run_number }}" || export TAG_NAME="${GITHUB_REF#refs/heads/}.release.${{ github.run_number }}"
        echo "prerelease=${PRERELEASE}" >> $GITHUB_OUTPUT
        echo "name=${NAME}" >> $GITHUB_OUTPUT
        echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT
    outputs:
      prerelease: ${{ steps.naming.outputs.prerelease }}
      name: ${{ steps.naming.outputs.name }}
      tag_name: ${{ steps.naming.outputs.tag_name }}
  build:
    needs: naming
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@master
    - name: Get latest release of cloud-manager-client setup
      uses: i3h/download-release-asset@v1
      with:
        owner: "limanmys"
        repo: "cloud-manager-client"
        tag: "latest"
        file: /^cloud-manager-client-.*$/
        path: "clients/"
        token: ${{ secrets.TOKEN }}
    - name: Getting Go Binaries
      uses: actions/setup-go@v2
      with:
          go-version: '1.22'
    - name: Build
      run: |
        ls -l ./clients
        go get -u && go mod tidy
        CGO_ENABLED=0 go build -o cloud-manager-server cmd/server/main.go
    - name: Make DEB & RPM Packages
      run: |
        sudo apt install rpm -y
        TMP_DIR=/tmp/cloud-manager-server-build
        DEBIAN_PATH=$TMP_DIR/DEBIAN
        SERVER_BIN_PATH=$TMP_DIR/opt/cloud-manager-server
        rm -rf $TMP_DIR
        
        mkdir -p $TMP_DIR
        mkdir -p $DEBIAN_PATH
        mkdir -p $SERVER_BIN_PATH
        
        # For DEB package
        cp ./scripts/debian/control $DEBIAN_PATH/control
        cp ./scripts/debian/postinst $DEBIAN_PATH/postinst
        cp cloud-manager-server $SERVER_BIN_PATH/cloud-manager-server
        cp .env.example $SERVER_BIN_PATH/.env.example
        cp -r ./clients $SERVER_BIN_PATH
    
        sed -i s/%VERSION%/${{ github.run_number }}/g $DEBIAN_PATH/control
        chmod 775 $DEBIAN_PATH/postinst
    
        dpkg-deb -Zxz --build $TMP_DIR
        mv /tmp/cloud-manager-server-build.deb /tmp/cloud-manager-server-${{ github.run_number }}-x64.deb
        
        # For RPM package - prepare directories for rpmbuild
        mkdir -p ~/rpmbuild/{RPMS,SRPMS,BUILD,SOURCES,SPECS,BUILDROOT}
        cp -r $SERVER_BIN_PATH ~/rpmbuild/SOURCES/cloud-manager-server
        
        # Modify spec file 
        sed -i s/%VERSION%/${{ github.run_number }}/g scripts/redhat/cloud-manager-server.spec
        cp scripts/redhat/cloud-manager-server.spec ~/rpmbuild/SPECS/
        
        # Build RPM
        rpmbuild -ba ~/rpmbuild/SPECS/cloud-manager-server.spec
        cp ~/rpmbuild/RPMS/x86_64/cloud-manager-server-${{ github.run_number }}-0.x86_64.rpm /tmp/cloud-manager-server-${{ github.run_number }}-x64.rpm
    - name: Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
          files: |
            /tmp/cloud-manager-server-${{ github.run_number }}-x64.deb
            /tmp/cloud-manager-server-${{ github.run_number }}-x64.rpm
          name: "${{ needs.naming.outputs.name }}"
          tag_name: "${{ needs.naming.outputs.tag_name }}"
          prerelease: ${{ needs.naming.outputs.prerelease }}